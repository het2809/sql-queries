USE employees;

-- --OVER
SELECT EMP_NO,
DEPARTMENT,
SALARY,
AVG(SALARY) OVER() 
FROM EMPLOYEES; 

SELECT EMP_NO,
DEPARTMENT,
SALARY,
AVG(SALARY) OVER() , 
MIN(SALARY) OVER() , 
MAX(SALARY) OVER() 
FROM EMPLOYEES; 
	-- --OR
SELECT MAX(SALARY),
MiN(SALARY),
AVG(SALARY),DEPARTMENT
 FROM EMPLOYEES 
 GROUP BY DEPARTMENT;

SELECT DEPARTMENT,
AVG(SALARY) ,
 MAX(SALARY) , 
 MIN(SALARY)
 FROM EMPLOYEES 
 GROUP BY DEPARTMENT;

SELECT EMP_NO,
DEPARTMENT,
SALARY,
AVG(SALARY) OVER() ,
MIN(SALARY) OVER() ,
MAX(SALARY) OVER() 
FROM EMPLOYEES;

 SELECT * ,
 MAX(SALARY) OVER() 
 FROM EMPLOYEES 
 GROUP BY DEPARTMENT;
 
 -- --OVER(PARTITION)
  SELECT * ,
  MAX(SALARY) OVER(PARTITION BY DEPARTMENT) 
  FROM EMPLOYEES;
  
  SELECT DEPARTMENT ,
  SALARY ,
  MAX(SALARY) OVER(PARTITION BY DEPARTMENT) AS MAX_SALARY,
  MIN(SALARY) OVER(PARTITION BY DEPARTMENT)AS MIN_SALARY,
  AVG(SALARY) OVER(PARTITION BY DEPARTMENT)AS AVG_SALARY 
  FROM EMPLOYEES;
  
  
  SELECT DEPARTMENT ,
  SALARY ,
  MAX(SALARY) OVER(PARTITION BY DEPARTMENT) AS MAX_SALARY,
  MIN(SALARY) OVER(PARTITION BY DEPARTMENT)AS MIN_SALARY,
  AVG(SALARY) OVER(PARTITION BY DEPARTMENT)AS AVG_SALARY,
  COUNT(*) OVER(PARTITION BY DEPARTMENT)AS COUNT 
  FROM EMPLOYEES;

SELECT DEPARTMENT ,
SALARY, 
MAX(SALARY) OVER(PARTITION BY DEPARTMENT) AS MAX , 
MIN(SALARY) OVER(PARTITION BY DEPARTMENT) AS MIN , 
AVG(SALARY) OVER(PARTITION BY DEPARTMENT) AS AVG ,
SUM(SALARY) OVER(PARTITION BY DEPARTMENT ORDER BY SALARY)AS SUM 
FROM EMPLOYEES;

  
SELECT 
emp_no, 
department, 
salary, 
MIN(salary) OVER(PARTITION BY department ORDER BY salary DESC) as rolling_min
FROM employees;

-- --RANK
SELECT SALARY , RANK() OVER(ORDER BY SALARY DESC) FROM EMPLOYEES;
SELECT SALARY , RANK() OVER(PARTITION BY DEPARTMENT ORDER BY SALARY);
SELECT SALARY , RANK() OVER(ORDER BY SALARY DESC) , RANK() OVER(PARTITION BY DEPARTMENT ORDER BY SALARY) FROM EMPLOYEES;
SELECT DEPARTMENT,SALARY , RANK() OVER(PARTITION BY DEPARTMENT ORDER BY SALARY DESC) , RANK() OVER(ORDER BY SALARY DESC) FROM EMPLOYEES;

-- --RANK
SELECT DEPARTMENT,SALARY , RANK() OVER(ORDER BY SALARY DESC) AS RANK_PROPERTY ,
-- -- ROW_NUMBER
ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS ROW_NUMBER_PROPERTY,
-- --DENSE_RANK
DENSE_RANK() OVER(ORDER BY SALARY DESC) AS DENSE_RANK_PROPERTY FROM EMPLOYEES ;

-- --NTITLE
SELECT * , NTILE(4) OVER() FROM EMPLOYEES;

SELECT 
emp_no, 
department, 
salary,
FIRST_VALUE(emp_no) OVER(PARTITION BY department ORDER BY salary DESC) as highest_paid_dept,
FIRST_VALUE(emp_no) OVER(ORDER BY salary DESC) as highest_paid_overall
FROM employees;

-- --LAG
SELECT 
emp_no, 
department, 
salary,
salary - LAG(salary) OVER(ORDER BY salary DESC) as salary_diff
FROM employees;
 
SELECT 
emp_no, 
department, 
salary,
salary - LAG(salary) OVER(PARTITION BY department ORDER BY salary DESC) as dept_salary_diff
FROM employees;

