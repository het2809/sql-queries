CREATE DATABASE TV_DB;
USE TV_DB;

CREATE TABLE REVIEWERS (
ID INT PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME VARCHAR(50) NOT NULL ,
LAST_NAME VARCHAR(50) NOT NULL);

CREATE TABLE SERIES(
ID INT PRIMARY KEY AUTO_INCREMENT,
TITLE VARCHAR(100),
RELEASED_YEAR YEAR,
GENRE VARCHAR(100));

CREATE TABLE REVIEWS(
ID INT PRIMARY KEY AUTO_INCREMENT,
RATING DECIMAL(2,1),
SERIES_ID INT,
REVIEWER_ID INT,
FOREIGN KEY (SERIES_ID) REFERENCES SERIES(ID),
FOREIGN KEY (REVIEWER_ID) REFERENCES REVIEWERS(ID));

SELECT TITLE , RATING FROM SERIES LEFT JOIN REVIEWS ON SERIES.ID = REVIEWS.SERIES_ID;

SELECT title, ROUND(AVG(rating), 2) AS avg_rating FROM series JOIN reviews ON series.id = reviews.series_id GROUP BY title ORDER BY avg_rating;

SELECT FIRST_NAME , LAST_NAME , RATING FROM REVIEWS JOIN REVIEWERS ON REVIEWS.REVIEWER_ID = REVIEWERS.ID;

SELECT TITLE FROM SERIES LEFT JOIN REVIEWS ON SERIES.ID = REVIEWS.SERIES_ID WHERE RATING IS NULL;

SELECT GENRE , AVG(RATING) FROM SERIES JOIN REVIEWS ON SERIES.ID = REVIEWS.SERIES_ID GROUP BY GENRE;

SELECT first_name, last_name, COUNT(rating) AS count, IFNULL(MIN(rating), 0) AS min, IFNULL(MAX(rating), 0) AS max, ROUND(IFNULL(AVG(rating), 0), 2) AS average,
CASE
WHEN COUNT(rating) >= 10 THEN 'POWERUSER'
WHEN COUNT(rating) > 0 THEN 'ACTIVE'
ELSE 'INACTIVE'
END AS status
FROM reviewers LEFT JOIN reviews ON reviewers.id = reviews.reviewer_id GROUP BY first_name , last_name;

SELECT title,rating, CONCAT(first_name, ' ', last_name) AS reviewer FROM reviews 
INNER JOIN series ON reviews.series_id = series.id
INNER JOIN reviewers ON reviews.reviewer_id = reviewers.id; 